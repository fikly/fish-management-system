{"version":3,"sources":["services/serviceApi.js","services/serviceGeneral.js","utils/optionObject.js","schemas/contentSchema.js","views/components/content/index.jsx","utils/formatRupiah.js","views/components/modal/index.jsx","views/components/sortFilter/index.jsx","views/containers/homepages/controller.js","views/containers/homepages/index.jsx"],"names":["GetListAPI","method","url","PostListAPI","PutListAPI","DeleteListAPI","GetOptionArea","GetOptionSize","API_URL","require","store","apiService","endpoint","data","a","result","then","response","catch","error","notify","show","optionObject","value","label","KOMODITAS","PROVINSI","KOTA","UKURAN","HARGA","SingleContent","price","editContent","deleteContent","index","className","komoditas","size","area_provinsi","toLowerCase","area_kota","currency","separator","symbol","precision","format","moment","tgl_parsed","title","onClick","Modal","Container","onLoad","dispatch","useDispatch","showModal","useSelector","state","general","type","SET_MODAL_STATUS","SortFilter","queryList","content","useState","activeFilter","setActiveFilter","useEffect","provinceFilter","cityFilter","sizeFilter","sort","URUTKAN","dataForSchema","schema","getArea","getSize","optionSize","length","i","push","optionProvince","optionCity","find","row","province","city","options","setSchemaForFilter","filterSchema","getList","list","submitForm","params","status","uuid","uuidv4","timestamp","unix","updateForm","id","search","set","deleteForm","Homepage","contentSchema","setSchema","setFilterSchema","onEdit","setOnEdit","onDelete","setOnDelete","onLoadList","setOnLoadList","onLoadSchema","setOnLoadSchema","onLoadSubmit","setOnLoadSubmit","onSort","setOnSort","getDataForSchema","newSchema","setList","SET_LIST","filter","SET_QUERY_LIST","onSubmitForm","defaultValue","setDefaultValueSchema","submitDeleteContent","submitSortFilter","map","newFilterSchema","model","onSubmit","action","displayName"],"mappings":"wLAAA,mRACO,IAAMA,EAAa,CAACC,OAAQ,OAAQC,IAAK,QACnCC,EAAc,CAACF,OAAQ,SAAUC,IAAK,QACtCE,EAAa,CAACH,OAAQ,OAAQC,IAAK,QACnCG,EAAgB,CAACJ,OAAQ,SAAUC,IAAK,QAGxCI,EAAgB,CAACL,OAAQ,OAAQC,IAAK,eACtCK,EAAgB,CAACN,OAAQ,OAAQC,IAAK,gB,wHCN5CM,EAAWC,EAAQ,IAAnBD,QAGDE,EAAQ,IAFKD,EAAQ,KAEb,CAAeD,GAEhBG,EAAU,uCAAG,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,6DAClBC,EAAQ,GACLd,EAAeW,EAAfX,OAAQC,EAAOU,EAAPV,IAFO,SAIhBQ,EAAMT,GAAQC,EAAKW,GAAMG,MAAK,SAACC,GACjCF,EAASE,KACVC,OAAM,SAASC,GACdC,SAAOC,KAAK,+BAAgC,SAC5CN,EAASI,EAAMF,YARG,gCAWfF,GAXe,2CAAH,yD,iCCPvB,oDAAO,IAAMO,EAAe,SAACC,GACzB,MAAO,CACHA,MAAOA,EACPC,MAAOD,K,wHCDf,sBACKE,YAAY,CACT,KAAQ,OACR,UAAY,EACZ,YAAe,mBAJvB,cAMKC,WAAW,CACR,KAAQ,SACR,UAAY,EACZ,QAAW,GACX,YAAe,mBAVvB,cAYKC,OAAO,CACJ,KAAQ,SACR,UAAY,EACZ,QAAW,GACX,YAAe,eAhBvB,cAkBKC,SAAS,CACN,KAAQ,SACR,UAAY,EACZ,QAAW,GACX,YAAe,sBAtBvB,cAwBKC,QAAQ,CACL,KAAQ,WACR,UAAY,EACZ,YAAe,SA3BvB,cA6BI,iBAAkB,CACd,KAAQ,WA9BhB,G,qFC4BeC,EAtBO,SAAC,GAA+C,ICNzCC,EDMLlB,EAA6C,EAA7CA,KAAMmB,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,MACtD,OACI,qBAAKC,UAAU,8DAAf,SACI,eAAC,WAAD,WACI,qBAAKA,UAAU,wDAAf,SACI,cAAC,IAAD,MAEJ,sBAAKA,UAAU,oCAAf,UACI,qBAAIA,UAAU,wDAAd,UAAuEtB,EAAKuB,UAA5E,IAAuF,uBAAMD,UAAU,8BAAhB,cAAgDtB,EAAKwB,KAArD,YACvF,oBAAIF,UAAU,8CAAd,mBAAgEtB,EAAKyB,cAAcC,cAAnF,cAAsG1B,EAAK2B,UAAUD,iBACrH,oBAAIJ,UAAU,uCAAd,UChBSJ,EDgB0DlB,EAAKkB,MCfjFU,IAASV,EAAO,CAACW,UAAW,IAAKC,OAAQ,OAAQC,UAAW,IAAIC,YDgBvD,oBAAIV,UAAU,8BAAd,SAA6CW,IAAOjC,EAAKkC,YAAYF,OAAO,oBAEhF,sBAAKV,UAAU,gCAAf,UACI,cAAC,IAAD,CAAQa,MAAM,OAAOb,UAAU,sCAAsCc,QAAS,kBAAMjB,EAAYE,MAChG,cAAC,IAAD,CAAYc,MAAM,SAASb,UAAU,6BAA6Bc,QAAS,kBAAMhB,EAAcC,e,QEgBpGgB,G,OA/BD,SAAC,GAA+B,IAA9BF,EAA6B,EAA7BA,MAAOG,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,OACxBC,EAAWC,cAEVC,EADSC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WACtCH,UAKP,OACI,cAAC,WAAD,UACI,qBAAKpB,UAAS,kDAA6CoB,EAAY,GAAK,UAA5E,SACI,qBAAKpB,UAAU,kBAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,sBAAKA,UAAU,0DAAf,UACI,sBAAKA,UAAU,gFAAf,UACI,oBAAIA,UAAU,mBAAd,SAAkCa,IAClC,cAAC,IAAD,CAAKC,QAAS,WAVtCI,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,KAUkBsB,UAAU,8BAEhD,sBAAKA,UAAU,yBAAf,UACI,cAACgB,EAAD,IACCC,GACD,qBAAKjB,UAAU,gBAAf,SAA+B,cAAC,IAAD,sB,QCIhD0B,G,OA1BI,SAAC,GAAe,IAAdZ,EAAa,EAAbA,QAEVa,EADSN,aAAY,SAACC,GAAD,OAAWA,EAAMM,WACtCD,UAFuB,EAIUE,oBAAS,GAJnB,mBAIvBC,EAJuB,KAITC,EAJS,KAiB9B,OAXAC,qBAAU,WACN,IAAMC,EAAkBN,EAAUpC,YAAYoC,EAAUpC,YAAY,GAC9D2C,EAAcP,EAAUnC,QAAQmC,EAAUnC,QAAMJ,MAAQ,GACxD+C,EAAcR,EAAUlC,UAAUkC,EAAUlC,UAAQL,MAAQ,GAC5DgD,EAAQT,EAAUU,WAAWV,EAAUU,WAASjD,MAAQ,GAE1D2C,EADmB,KAAnBE,GAAwC,KAAfC,GAAoC,KAAfC,GAA8B,KAATC,KAKxE,CAACT,IAEA,cAAC,WAAD,UACI,sBAAK3B,UAAS,0FAAqF8B,EAAe,SAAW,IAAMhB,QAAS,kBAAMA,KAAlJ,UACI,cAAC,IAAD,CAAUD,MAAM,WADpB,MACkC,cAAC,IAAD,CAAYA,MAAM,gB,2BCtB2BvC,EAAQ,KAA5FH,E,EAAAA,cAAeC,E,EAAAA,cAAeP,E,EAAAA,WAAYG,E,EAAAA,YAAaC,E,EAAAA,WAAYC,E,EAAAA,cACnEM,EAAcF,EAAQ,KAAtBE,WACAW,EAAgBb,EAAQ,KAAxBa,aAEMmD,EAAa,uCAAG,WAAOC,GAAP,6BAAA5D,EAAA,sEACHH,EAAWL,GADR,cACnBqE,EADmB,gBAEHhE,EAAWJ,GAFR,OAKzB,GAHMqE,EAFmB,OAInBC,EAAa,GACfD,GAAWA,EAAQE,OAAS,EAC5B,IAASC,EAAI,EAAGA,EAAIH,EAAQE,OAAQC,IAChCF,EAAWG,KAAK1D,EAAasD,EAAQG,GAAG1C,OAMhD,GAFM4C,EAAiB,GACjBC,EAAa,GACfP,GAAWA,EAAQG,OAAS,EAC5B,IADgC,EAAD,SACtBC,GACuBE,EAAeE,MAAK,SAACC,GAAD,OAASA,EAAI5D,QAAUmD,EAAQI,GAAGM,aAE9EJ,EAAeD,KAAK1D,EAAaqD,EAAQI,GAAGM,WAExBH,EAAWC,MAAK,SAACC,GAAD,OAASA,EAAI5D,QAAUmD,EAAQI,GAAGO,SAEtEJ,EAAWF,KAAK1D,EAAaqD,EAAQI,GAAGO,QAPvCP,EAAI,EAAGA,EAAIJ,EAAQG,OAAQC,IAAM,EAAjCA,GAdY,OA0BzBL,EAAO9C,UAAQ2D,QAAUV,EACzBH,EAAOhD,YAAU6D,QAAUN,EAC3BP,EAAO/C,QAAM4D,QAAUL,EA5BE,kBA8BlBR,GA9BkB,4CAAH,sDAiCbc,EAAqB,SAACd,EAAQnD,GACvC,IAAMkE,EAAe,GAsCrB,OArCAA,EAAa/D,YAAb,2BACOgD,EAAOhD,aADd,IAEI,UAAY,EACZ,aAAgBH,EAAMG,YAAYH,EAAMG,YAAUH,MAAQ,KAE9DkE,EAAa9D,QAAb,2BACO+C,EAAO/C,SADd,IAEI,UAAY,EACZ,aAAgBJ,EAAMI,QAAQJ,EAAMI,QAAMJ,MAAQ,KAEtDkE,EAAa7D,UAAb,2BACO8C,EAAO9C,WADd,IAEI,UAAY,EACZ,aAAgBL,EAAMK,UAAUL,EAAMK,UAAQL,MAAQ,KAE1DkE,EAAajB,WAAW,CACpB,KAAQ,SACR,UAAY,EACZ,QAAW,CACP,CAACjD,MAAO,gBAAiBC,MAAO,mBAChC,CAACD,MAAO,iBAAkBC,MAAO,mBACjC,CAACD,MAAO,oBAAqBC,MAAO,kBACpC,CAACD,MAAO,qBAAsBC,MAAO,kBACrC,CAACD,MAAO,gBAAiBC,MAAO,cAChC,CAACD,MAAO,iBAAkBC,MAAO,cACjC,CAACD,MAAO,YAAaC,MAAO,kBAC5B,CAACD,MAAO,aAAcC,MAAO,kBAC7B,CAACD,MAAO,WAAYC,MAAO,mBAC3B,CAACD,MAAO,YAAaC,MAAO,oBAEhC,YAAe,2BACf,aAAgBD,EAAMiD,WAAWjD,EAAMiD,WAASjD,MAAQ,IAE5DkE,EAAa,wBAA0B,CACnC,KAAQ,UAGLA,GAGEC,EAAO,uCAAG,8BAAA5E,EAAA,6DACfC,EAAS,GADM,SAEAJ,EAAWX,GAFX,cAEb2F,EAFa,SAGPA,EAAKb,OAAS,IACtB/D,EAAS4E,GAJM,kBAOZ5E,GAPY,2CAAH,qDAUP6E,EAAU,uCAAG,WAAOC,GAAP,iBAAA/E,EAAA,6DAChBC,EAAS,CACX+E,QAAQ,GAFU,SAKZjF,EAAO,CACTkF,KAAMC,cACN5D,UAAWyD,EAAOpE,aAClBa,cAAeuD,EAAOnE,YAAUH,MAChCiB,UAAWqD,EAAOlE,QAAMJ,MACxBc,KAAMwD,EAAOjE,UAAQL,MACrBQ,MAAO8D,EAAOhE,SACdkB,WAAYD,MAASD,SACrBoD,UAAWnD,MAASoD,QAbN,SAgBZvF,EAAWR,EAAa,CAACU,IAhBb,OAiBlBO,SAAOC,KAAK,yBAA0B,WACtCN,EAAO+E,QAAS,EAlBE,gDAoBlB/E,EAAO+E,QAAS,EAChB1E,SAAOC,KAAK,6BAA8B,SArBxB,iCAwBfN,GAxBe,yDAAH,sDA2BVoF,EAAU,uCAAG,WAAON,EAAQO,GAAf,iBAAAtF,EAAA,6DAChBC,EAAS,CACX+E,QAAQ,GAFU,SAKZjF,EAAO,CACTuB,UAAWyD,EAAOpE,aAClBa,cAAeuD,EAAOnE,YAAUH,MAChCiB,UAAWqD,EAAOlE,QAAMJ,MACxBc,KAAMwD,EAAOjE,UAAQL,MACrBQ,MAAO8D,EAAOhE,SACdkB,WAAYD,MAASD,SACrBoD,UAAWnD,MAASoD,QAZN,SAeZvF,EAAWP,EAAY,CACzBiG,OAAQ,CAACN,KAAMK,GACfE,IAAKzF,IAjBS,OAmBlBO,SAAOC,KAAK,yBAA0B,WACtCN,EAAO+E,QAAS,EApBE,gDAsBlB/E,EAAO+E,QAAS,EAChB1E,SAAOC,KAAK,6BAA8B,SAvBxB,iCA0BfN,GA1Be,yDAAH,wDA6BVwF,EAAU,uCAAG,WAAOH,GAAP,eAAAtF,EAAA,6DAChBC,EAAS,CACX+E,QAAQ,GAFU,kBAKZnF,EAAWN,EAAe,CAC5BgG,OAAQ,CAACN,KAAMK,KAND,OAQlBhF,SAAOC,KAAK,yBAA0B,WACtCN,EAAO+E,QAAS,EATE,gDAWlB/E,EAAO+E,QAAS,EAChB1E,SAAOC,KAAK,6BAA8B,SAZxB,iCAefN,GAfe,yDAAH,sDCvIjByF,EAAW,WACb,IAAMnD,EAAWC,cACXS,EAAUP,aAAY,SAACC,GAAD,OAAWA,EAAMM,WAEtCR,EADSC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WACtCH,UACAoC,EAAmB5B,EAAnB4B,KAAM7B,EAAaC,EAAbD,UALM,EAMSE,mBAASyC,GANlB,mBAMZ/B,EANY,KAMJgC,EANI,OAOqB1C,mBAAS,IAP9B,mBAOZyB,EAPY,KAOEkB,EAPF,OAQS3C,mBAAS,IARlB,mBAQZ4C,EARY,KAQJC,EARI,OASa7C,mBAAS,IATtB,mBASZ8C,EATY,KASFC,EATE,OAUiB/C,oBAAS,GAV1B,mBAUZgD,EAVY,KAUAC,EAVA,OAWqBjD,oBAAS,GAX9B,mBAWZkD,EAXY,KAWEC,EAXF,OAYqBnD,oBAAS,GAZ9B,mBAYZoD,EAZY,KAYEC,GAZF,QAaSrD,oBAAS,GAblB,qBAaZsD,GAbY,MAaJC,GAbI,MAebC,GAAgB,uCAAG,8BAAA1G,EAAA,sEACG2D,EAAcC,GADjB,OACf+C,EADe,OAErBf,EAAUe,GACJhC,EAAeD,EAAmBiC,EAAW3D,GACnD6C,EAAgBlB,GAChB0B,GAAgB,GALK,2CAAH,qDAQhBO,GAAO,uCAAG,4BAAA5G,EAAA,6DACZmG,GAAc,GADF,SAEOvB,IAFP,OAENC,EAFM,OAGZsB,GAAc,GACd5D,EAAS,CAACM,KAAMgE,IAAU9G,KAAM8E,EAAKiC,QAAO,SAACxC,GAAD,OAASA,EAAIW,UACzD1C,EAAS,CAACM,KAAMkE,IAAgBhH,KAAM,KAL1B,2CAAH,qDAQPiH,GAAY,uCAAG,WAAOjC,GAAP,SAAA/E,EAAA,6DACjBuG,IAAgB,GADC,SAEKT,EAAST,EAAWN,EAAQe,EAAOb,MAAQH,EAAWC,GAF3D,cAGNC,SACP4B,KACArE,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,KAE5CmB,GAAY,IACZqF,IAAgB,GARC,2CAAH,sDAWZrF,GAAc,SAACE,GACjBiF,GAAgB,GAChB,IAAMpD,EAAqB,KAAV7B,EAAeyD,EAAKzD,GAASA,EACxCuF,ED4GuB,SAAC/C,EAAQX,GAM1C,OALAW,EAAOjD,aAAWsG,aAA4B,KAAZhE,EAAiBA,EAAQ3B,UAAY2B,EACvEW,EAAOhD,YAAUqG,aAA4B,KAAZhE,EAAiBA,EAAQzB,cAAgByB,EAC1EW,EAAO/C,QAAMoG,aAA4B,KAAZhE,EAAiBA,EAAQvB,UAAYuB,EAClEW,EAAO9C,UAAQmG,aAA4B,KAAZhE,EAAiBA,EAAQ1B,KAAO0B,EAC/DW,EAAO7C,SAAOkG,aAA4B,KAAZhE,EAAiBA,EAAQhC,MAAQgC,EACxDW,EClHesD,CAAsBtD,EAAQX,GAChD2C,EAAUe,GACVN,GAAgB,GAChBN,EAAU9C,GACI,KAAV7B,GACAmB,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,KAI1CoB,GAAa,uCAAG,WAAOC,GAAP,eAAApB,EAAA,sDACZiD,EAAU4B,EAAKzD,GACrB6E,EAAYhD,GACZV,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,IAHtB,2CAAH,sDAMboH,GAAmB,uCAAG,sBAAAnH,EAAA,6DACxBuG,IAAgB,GADQ,SAEHd,EAAWO,EAASf,MAFjB,cAGbD,SACPiB,EAAY,IACZW,KACArE,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,KAE5CwG,IAAgB,GARQ,2CAAH,qDAuBnBa,GAAmB,SAACrC,GACtBxC,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,IACxCwC,EAAS,CAACM,KAAMkE,IAAgBhH,KAAMgF,KAG1C1B,qBAAU,WACDZ,IACDgE,IAAU,GACVR,EAAY,IACZ/E,GAAY,OAEjB,CAACuB,IAEJY,qBAAU,WACNqD,KACAE,OACD,IAqBH,OACI,eAAC,WAAD,WACMV,EAGE,eAAC,WAAD,WACMrB,EAAKb,OAAU,EACb,qBAAK3C,UAAU,MAAf,SACKwD,EAAKwC,KAAI,SAAC/C,EAAKL,GACZ,OACI,qBAAK5C,UAAU,WAAf,SACI,cAAC,EAAD,CAAetB,KAAMuE,EAAKpD,YAAaA,GAAaC,cAAeA,GAAeC,MAAO6C,KAD9DA,QAO3C,qBAAK5C,UAAU,qEAAf,SACI,oBAAIA,UAAU,mBAAd,0BAGR,cAAC,EAAD,CAAYc,QAjEH,WACrB,IAAMmF,EAAkB5C,EAAmBC,EAAc3B,GACzD6C,EAAgByB,GAChB/E,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,IACxC0G,IAAU,SA2CF,cAAC,IAAD,IAqBJ,cAAC,EAAD,CAAOvE,MAAK,UAAKsE,GAAS,cAAgB,SAA9B,YAAkDnE,UA3C7C,WACrB,OACI,eAAC,WAAD,YACOmE,IAAuB,KAAbR,GAAmBI,GAChC,cAAC,IAAD,CAAYmB,MAAO3D,EAAQ4D,SAAUR,KACpChB,GACD,sBAAK3E,UAAU,wCAAf,UACI,qBAAIA,UAAU,SAAd,6CAAuD,4BAAI2E,EAASrF,eAApE,QACA,sBAAKU,UAAU,SAAf,UACI,cAAC,IAAD,CAAQwB,KAAK,UAAUnC,MAAM,KAAK+G,OAAQ,kBAtC1DxB,EAAY,SACZ1D,EAAS,CAACM,KAAMC,IAAkB/C,MAAM,KAqC8CsB,UAAU,UAChF,cAAC,IAAD,CAAQwB,KAAK,SAASnC,MAAM,MAAM+G,OAAQ,kBAAMN,cAGvDX,IACD,cAAC,IAAD,CAAYe,MAAO5C,EAAc6C,SAAUJ,SA6B4C9E,OAAQgE,QAK/GZ,EAASgC,YAAc,oBAERhC","file":"static/js/4.a71baadf.chunk.js","sourcesContent":["// List API\nexport const GetListAPI = {method: 'read', url: 'list'};\nexport const PostListAPI = {method: 'append', url: 'list'};\nexport const PutListAPI = {method: 'edit', url: 'list'};\nexport const DeleteListAPI = {method: 'delete', url: 'list'};\n\n// Option API\nexport const GetOptionArea = {method: 'read', url: 'option_area'};\nexport const GetOptionSize = {method: 'read', url: 'option_size'};\n","import {notify} from 'react-notify-toast';\n\nconst {API_URL} = require('~/constants/variable');\nconst SteinStore = require('stein-js-client');\n\nconst store = new SteinStore(API_URL);\n\nexport const apiService = async (endpoint, data) => {\n    let result= [];\n    const {method, url} = endpoint;\n\n    await store[method](url, data).then((response) => {\n        result = response;\n    }).catch(function(error) {\n        notify.show('On Error while request data!', 'error');\n        result = error.response;\n    });\n\n    return result;\n};\n","export const optionObject = (value) => {\n    return {\n        value: value,\n        label: value,\n    };\n};\n","import {HARGA, KOMODITAS, KOTA, PROVINSI, UKURAN} from '~/constants/variable';\n\nexport default {\n    [KOMODITAS]: {\n        'type': 'text',\n        'required': true,\n        'placeholder': 'Nama Komoditas',\n    },\n    [PROVINSI]: {\n        'type': 'select',\n        'required': true,\n        'options': [],\n        'placeholder': 'Pilih Provinsi',\n    },\n    [KOTA]: {\n        'type': 'select',\n        'required': true,\n        'options': [],\n        'placeholder': 'Pilih Kota',\n    },\n    [UKURAN]: {\n        'type': 'select',\n        'required': true,\n        'options': [],\n        'placeholder': 'Pilih Ukuran (cm)',\n    },\n    [HARGA]: {\n        'type': 'currency',\n        'required': true,\n        'placeholder': 'IDR.',\n    },\n    'Simpan Content': {\n        'type': 'submit',\n    },\n};\n","import moment from 'moment';\nimport React, {Fragment} from 'react';\nimport {BiEdit, BiTrashAlt} from 'react-icons/bi';\nimport {IoFishOutline} from 'react-icons/io5';\nimport {formatRupiah} from '~/utils/formatRupiah';\n\nimport './style/singleContent.scss';\n\nconst SingleContent = ({data, editContent, deleteContent, index}) => {\n    return (\n        <div className=\"single-content custom-card mb-20p d-flex align-items-center\">\n            <Fragment>\n                <div className=\"icon d-flex justify-content-center align-items-center\">\n                    <IoFishOutline />\n                </div>\n                <div className=\"ml-16p detail-content flex-grow-1\">\n                    <h4 className=\"font-16 font-600 mb-8p d-flex justify-content-between\">{data.komoditas} <span className=\"font-10 color-grey font-300\">({data.size}cm)</span></h4>\n                    <h6 className=\"font-12 font-300 color-grey text-capitalize\">{`${data.area_provinsi.toLowerCase()} - ${data.area_kota.toLowerCase()}`}</h6>\n                    <h5 className=\"font-14 font-700 color-primary mt-4p\">{formatRupiah(data.price)}</h5>\n                    <h5 className=\"font-12 font-300 color-grey\">{moment(data.tgl_parsed).format('MMM Do YYYY')}</h5>\n                </div>\n                <div className=\"action-content d-flex font-20\">\n                    <BiEdit title=\"Edit\" className=\"mr-16p cursor-pointer color-primary\" onClick={() => editContent(index)} />\n                    <BiTrashAlt title=\"Delete\" className=\"cursor-pointer color-error\" onClick={() => deleteContent(index)} />\n                </div>\n            </Fragment>\n        </div>\n    );\n};\n\nexport default SingleContent;\n","import currency from 'currency.js';\n\nexport const formatRupiah = (price) => {\n    return currency(price, {separator: ',', symbol: 'IDR ', precision: 0}).format();\n};\n","import React, {Fragment} from 'react';\nimport {BiX} from 'react-icons/bi';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {SET_MODAL_STATUS} from '~/states/actions/generalAction';\nimport Loading from '../loading';\n\nimport './style/modal.scss';\n\nconst Modal = ({title, Container, onLoad}) =>{\n    const dispatch = useDispatch();\n    const general = useSelector((state) => state.general);\n    const {showModal} = general;\n\n    const closeModal = () => {\n        dispatch({type: SET_MODAL_STATUS, data: false});\n    };\n    return (\n        <Fragment>\n            <div className={`modal-overlay d-flex align-items-center ${showModal ? '' : 'd-none'}`}>\n                <div className=\"container-fluid\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-lg-4 modal-component d-flex flex-column with-shadow\">\n                            <div className=\"modal-title p-3 d-flex align-items-center justify-content-between with-shadow\">\n                                <h4 className=\"font-20 font-500\">{title}</h4>\n                                <BiX onClick={() => closeModal()} className=\"font-26 cursor-pointer\" />\n                            </div>\n                            <div className=\"modal-body flex-grow-1\">\n                                <Container />\n                                {onLoad &&\n                                <div className=\"modal-loading\"><Loading /></div>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Modal;\n","import React, {Fragment, useEffect, useState} from 'react';\nimport {BiFilter, BiSortAlt2} from 'react-icons/bi';\nimport {useSelector} from 'react-redux';\nimport {KOTA, PROVINSI, UKURAN, URUTKAN} from '~/constants/variable';\n\nimport './style/sortFilter.scss';\n\nconst SortFilter = ({onClick}) => {\n    const content = useSelector((state) => state.content);\n    const {queryList} = content;\n\n    const [activeFilter, setActiveFilter] = useState(false);\n\n    useEffect(()=> {\n        const provinceFilter = (queryList[PROVINSI] ? queryList[PROVINSI] : '');\n        const cityFilter = (queryList[KOTA] ? queryList[KOTA].value : '');\n        const sizeFilter = (queryList[UKURAN] ? queryList[UKURAN].value : '');\n        const sort = (queryList[URUTKAN] ? queryList[URUTKAN].value : '');\n        if (provinceFilter !== '' || cityFilter !== '' || sizeFilter !== '' || sort !== '') {\n            setActiveFilter(true);\n        } else {\n            setActiveFilter(false);\n        }\n    }, [queryList]);\n    return (\n        <Fragment>\n            <div className={`sort-filter-button with-shadow d-flex align-items-center justify-content-center ${activeFilter ? 'active' : ''}`} onClick={() => onClick()}>\n                <BiFilter title=\"Filter\" /> / <BiSortAlt2 title=\"Sort\" />\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SortFilter;\n","import moment from 'moment';\nimport {notify} from 'react-notify-toast';\nimport {v4 as uuidv4} from 'uuid';\nimport {HARGA, KOMODITAS, KOTA, PROVINSI, UKURAN, URUTKAN} from '~/constants/variable';\n\nconst {GetOptionArea, GetOptionSize, GetListAPI, PostListAPI, PutListAPI, DeleteListAPI} = require('~/services/serviceApi');\nconst {apiService} = require('~/services/serviceGeneral');\nconst {optionObject} = require('~/utils/optionObject');\n\nexport const dataForSchema = async (schema) => {\n    const getArea = await apiService(GetOptionArea);\n    const getSize = await apiService(GetOptionSize);\n\n    const optionSize = [];\n    if (getSize && getSize.length > 0) {\n        for (let i = 0; i < getSize.length; i++) {\n            optionSize.push(optionObject(getSize[i].size));\n        };\n    }\n\n    const optionProvince = [];\n    const optionCity = [];\n    if (getArea && getArea.length > 0) {\n        for (let i = 0; i < getArea.length; i++) {\n            const findSimilarProvince = optionProvince.find((row) => row.label === getArea[i].province);\n            if (!findSimilarProvince) {\n                optionProvince.push(optionObject(getArea[i].province));\n            }\n            const findSimilarCity = optionCity.find((row) => row.label === getArea[i].city);\n            if (!findSimilarCity) {\n                optionCity.push(optionObject(getArea[i].city));\n            }\n        };\n    }\n\n    schema[UKURAN].options = optionSize;\n    schema[PROVINSI].options = optionProvince;\n    schema[KOTA].options = optionCity;\n\n    return schema;\n};\n\nexport const setSchemaForFilter = (schema, value) => {\n    const filterSchema = {};\n    filterSchema[PROVINSI] = {\n        ...schema[PROVINSI],\n        'required': false,\n        'defaultValue': value[PROVINSI] ? value[PROVINSI].value : '',\n    };\n    filterSchema[KOTA] = {\n        ...schema[KOTA],\n        'required': false,\n        'defaultValue': value[KOTA] ? value[KOTA].value : '',\n    };\n    filterSchema[UKURAN] = {\n        ...schema[UKURAN],\n        'required': false,\n        'defaultValue': value[UKURAN] ? value[UKURAN].value : '',\n    };\n    filterSchema[URUTKAN] = {\n        'type': 'select',\n        'required': false,\n        'options': [\n            {value: 'komoditas-asc', label: 'Komoditas (A-Z)'},\n            {value: 'komoditas-desc', label: 'Komoditas (Z-A)'},\n            {value: 'area_provinsi-asc', label: 'Provinsi (A-Z)'},\n            {value: 'area_provinsi-desc', label: 'Provinsi (Z-A)'},\n            {value: 'area_kota-asc', label: 'Kota (A-Z)'},\n            {value: 'area_kota-desc', label: 'Kota (Z-A)'},\n            {value: 'price-asc', label: 'Harga Termurah'},\n            {value: 'price-desc', label: 'Harga Termahal'},\n            {value: 'size-asc', label: 'Ukuran Terkecil'},\n            {value: 'size-desc', label: 'Ukuran Terbesar'},\n        ],\n        'placeholder': 'Tanggal dibuat (default)',\n        'defaultValue': value[URUTKAN] ? value[URUTKAN].value : '',\n    };\n    filterSchema['Submit Filter / Sort'] = {\n        'type': 'submit',\n    };\n\n    return filterSchema;\n};\n\nexport const getList = async () => {\n    let result = [];\n    const list = await apiService(GetListAPI);\n    if (list && list.length > 0) {\n        result = list;\n    }\n\n    return result;\n};\n\nexport const submitForm = async (params) => {\n    const result = {\n        status: false,\n    };\n    try {\n        const data = {\n            uuid: uuidv4(),\n            komoditas: params[KOMODITAS],\n            area_provinsi: params[PROVINSI].value,\n            area_kota: params[KOTA].value,\n            size: params[UKURAN].value,\n            price: params[HARGA],\n            tgl_parsed: moment().format(),\n            timestamp: moment().unix(),\n        };\n\n        await apiService(PostListAPI, [data]);\n        notify.show('Success create content', 'success');\n        result.status = true;\n    } catch (error) {\n        result.status = false;\n        notify.show('On Error on create content', 'error');\n    }\n\n    return result;\n};\n\nexport const updateForm = async (params, id) => {\n    const result = {\n        status: false,\n    };\n    try {\n        const data = {\n            komoditas: params[KOMODITAS],\n            area_provinsi: params[PROVINSI].value,\n            area_kota: params[KOTA].value,\n            size: params[UKURAN].value,\n            price: params[HARGA],\n            tgl_parsed: moment().format(),\n            timestamp: moment().unix(),\n        };\n\n        await apiService(PutListAPI, {\n            search: {uuid: id},\n            set: data,\n        });\n        notify.show('Success update content', 'success');\n        result.status = true;\n    } catch (error) {\n        result.status = false;\n        notify.show('On Error on update content', 'error');\n    }\n\n    return result;\n};\n\nexport const deleteForm = async (id) => {\n    const result = {\n        status: false,\n    };\n    try {\n        await apiService(DeleteListAPI, {\n            search: {uuid: id},\n        });\n        notify.show('Success delete content', 'success');\n        result.status = true;\n    } catch (error) {\n        result.status = false;\n        notify.show('On Error on delete content', 'error');\n    }\n\n    return result;\n};\n\nexport const setDefaultValueSchema = (schema, content) => {\n    schema[KOMODITAS].defaultValue = (content !== '' ? content.komoditas : content);\n    schema[PROVINSI].defaultValue = (content !== '' ? content.area_provinsi : content);\n    schema[KOTA].defaultValue = (content !== '' ? content.area_kota : content);\n    schema[UKURAN].defaultValue = (content !== '' ? content.size : content);\n    schema[HARGA].defaultValue = (content !== '' ? content.price : content);\n    return schema;\n};\n","import React, {Fragment, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport JsonToForm from 'json-reactform';\nimport contentSchema from '~/schemas/contentSchema';\nimport {SET_LIST, SET_QUERY_LIST} from '~/states/actions/contentAction';\nimport {SET_MODAL_STATUS} from '~/states/actions/generalAction';\nimport SingleContent from '~/views/components/content';\nimport Modal from '~/views/components/modal';\nimport Button from '~/views/components/button';\nimport SortFilter from '~/views/components/sortFilter';\n\nimport {dataForSchema, deleteForm, getList, setDefaultValueSchema, setSchemaForFilter, submitForm, updateForm} from './controller';\nimport Loading from '~/views/components/loading';\nimport {KOMODITAS} from '~/constants/variable';\n\nconst Homepage = () => {\n    const dispatch = useDispatch();\n    const content = useSelector((state) => state.content);\n    const general = useSelector((state) => state.general);\n    const {showModal} = general;\n    const {list, queryList} = content;\n    const [schema, setSchema] = useState(contentSchema);\n    const [filterSchema, setFilterSchema] = useState({});\n    const [onEdit, setOnEdit] = useState('');\n    const [onDelete, setOnDelete] = useState('');\n    const [onLoadList, setOnLoadList] = useState(false);\n    const [onLoadSchema, setOnLoadSchema] = useState(false);\n    const [onLoadSubmit, setOnLoadSubmit] = useState(false);\n    const [onSort, setOnSort] = useState(false);\n\n    const getDataForSchema = async () => {\n        const newSchema = await dataForSchema(schema);\n        setSchema(newSchema);\n        const filterSchema = setSchemaForFilter(newSchema, queryList);\n        setFilterSchema(filterSchema);\n        setOnLoadSchema(true);\n    };\n\n    const setList = async () =>{\n        setOnLoadList(false);\n        const list = await getList();\n        setOnLoadList(true);\n        dispatch({type: SET_LIST, data: list.filter((row) => row.uuid)});\n        dispatch({type: SET_QUERY_LIST, data: {}});\n    };\n\n    const onSubmitForm = async (params) => {\n        setOnLoadSubmit(true);\n        const submit = await (onEdit ? updateForm(params, onEdit.uuid) : submitForm(params));\n        if (submit.status) {\n            setList();\n            dispatch({type: SET_MODAL_STATUS, data: false});\n        }\n        editContent('');\n        setOnLoadSubmit(false);\n    };\n\n    const editContent = (index) => {\n        setOnLoadSchema(false);\n        const content = (index !== '' ? list[index] : index);\n        const newSchema = setDefaultValueSchema(schema, content);\n        setSchema(newSchema);\n        setOnLoadSchema(true);\n        setOnEdit(content);\n        if (index !== '') {\n            dispatch({type: SET_MODAL_STATUS, data: true});\n        }\n    };\n\n    const deleteContent = async (index) => {\n        const content = list[index];\n        setOnDelete(content);\n        dispatch({type: SET_MODAL_STATUS, data: true});\n    };\n\n    const submitDeleteContent = async () =>{\n        setOnLoadSubmit(true);\n        const submit = await deleteForm(onDelete.uuid);\n        if (submit.status) {\n            setOnDelete('');\n            setList();\n            dispatch({type: SET_MODAL_STATUS, data: false});\n        }\n        setOnLoadSubmit(false);\n    };\n\n    const resetDeleteContent = () => {\n        setOnDelete('');\n        dispatch({type: SET_MODAL_STATUS, data: false});\n    };\n\n    const onOpenSortFilter = () => {\n        const newFilterSchema = setSchemaForFilter(filterSchema, queryList);\n        setFilterSchema(newFilterSchema);\n        dispatch({type: SET_MODAL_STATUS, data: true});\n        setOnSort(true);\n    };\n\n    const submitSortFilter = (params) => {\n        dispatch({type: SET_MODAL_STATUS, data: false});\n        dispatch({type: SET_QUERY_LIST, data: params});\n    };\n\n    useEffect(() => {\n        if (!showModal) {\n            setOnSort(false);\n            setOnDelete('');\n            editContent('');\n        };\n    }, [showModal]);\n\n    useEffect(() => {\n        getDataForSchema();\n        setList();\n    }, []);\n\n    const ModalBodyContent = () => {\n        return (\n            <Fragment>\n                {(!onSort && onDelete === '' && onLoadSchema) &&\n                <JsonToForm model={schema} onSubmit={onSubmitForm} />}\n                {onDelete &&\n                <div className=\"d-flex flex-column align-items-center\">\n                    <h5 className=\"mb-32p\">Are you sure you want to delete <b>{onDelete[KOMODITAS]}</b> ?</h5>\n                    <div className=\"d-flex\">\n                        <Button type=\"default\" label=\"No\" action={() => resetDeleteContent()} className=\"mr-8p\" />\n                        <Button type=\"danger\" label=\"Yes\" action={() => submitDeleteContent()} />\n                    </div>\n                </div>}\n                {onSort &&\n                <JsonToForm model={filterSchema} onSubmit={submitSortFilter} />}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            {!onLoadList ? (\n                <Loading />\n            ) : (\n                <Fragment>\n                    {(list.length) > 0 ? (\n                        <div className=\"row\">\n                            {list.map((row, i) => {\n                                return (\n                                    <div className=\"col-lg-6\" key={i}>\n                                        <SingleContent data={row} editContent={editContent} deleteContent={deleteContent} index={i} />\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    ) : (\n                        <div className=\"h-100 d-flex flex-column justify-content-center align-items-center\">\n                            <h5 className=\"font-400 font-24\">Empty List</h5>\n                        </div>\n                    )}\n                    <SortFilter onClick={onOpenSortFilter} />\n                </Fragment>\n            )}\n            <Modal title={`${onSort ? 'Filter/Sort' : 'Manage'} Content`} Container={ModalBodyContent} onLoad={onLoadSubmit} />\n        </Fragment>\n    );\n};\n\nHomepage.displayName = 'homepageContainer';\n\nexport default Homepage;\n"],"sourceRoot":""}